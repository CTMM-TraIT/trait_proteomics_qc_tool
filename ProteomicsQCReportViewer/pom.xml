<?xml version="1.0" encoding="UTF-8"?>

<!--
    Copyright 2013 CTMM TraIT

    License will be added later...
-->

<!-- Description: Maven configuration for the proteomics QC viewer. -->

<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">

    <modelVersion>4.0.0</modelVersion>

    <name>Proteomics QC Report Viewer</name>
    <version>1.6.5</version>
    <groupId>nl.ctmm.trait.proteomics.qcviewer</groupId>
    <artifactId>ProteomicsQCReportViewer</artifactId>
    <packaging>jar</packaging>
    <description>Proteomics QC Report Viewer application</description>

    <properties>
        <!-- Source and output properties. -->
        <project.build.sourceEncoding>UTF-8</project.build.sourceEncoding>
        <project.reporting.outputEncoding>UTF-8</project.reporting.outputEncoding>
        <!-- Dependency versions. -->
        <cglib.version>3.0</cglib.version>
        <commons-io.version>2.4</commons-io.version>
        <apache-commons-io.version>1.3.2</apache-commons-io.version>
        <commons-lang.version>2.6</commons-lang.version>
        <guava.version>14.0.1</guava.version>
        <hamcrest.version>1.3</hamcrest.version>
        <javassist.version>3.18.0-GA</javassist.version>
        <jcommon.version>1.0.17</jcommon.version>
        <jfreechart.version>1.0.15</jfreechart.version>
        <json-simple.version>1.1.1</json-simple.version>
        <junit.version>4.11</junit.version>
        <mockito.version>1.9.5</mockito.version>
        <powermock.version>1.5.1</powermock.version>
        <!-- Plugin versions. -->
        <maven-checkstyle-plugin.version>2.10</maven-checkstyle-plugin.version>
        <maven-jxr-plugin.version>2.3</maven-jxr-plugin.version>
        <maven-resources-plugin.version>2.6</maven-resources-plugin.version>
        <maven-dependency-plugin.version>2.5.1</maven-dependency-plugin.version>
    </properties>

    <build>
        <sourceDirectory>src</sourceDirectory>
        <testSourceDirectory>test</testSourceDirectory>
        <directory>target</directory>
    
        <plugins>
            <!-- Specify Java 7 for sources and targets (.class files). -->
            <plugin>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.1</version>
                <configuration>
                    <source>1.7</source>
                    <target>1.7</target>
                </configuration>
            </plugin>
            
            <!-- Use maven-jar-plugin to create executable jar using mvn package -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jar-plugin</artifactId>
                <version>2.4</version>
                <configuration>
                    <archive>
                        <manifest>
                            <addClasspath>true</addClasspath>
                            <mainClass>nl.ctmm.trait.proteomics.qcviewer.Main</mainClass>
                            <classpathPrefix>dependency-jars/</classpathPrefix>
                        </manifest>
                    </archive>
                </configuration>
            </plugin>
            
            <!-- Use maven-dependency-plugin to add dependencies to the classpath of executable jar -->
            <!-- Referred to article http://www.mkyong.com/maven/how-to-create-a-jar-file-with-maven/ -->
            <!-- TODO: Include resources directories and files while creating executable jar -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-dependency-plugin</artifactId>
                <version>${maven-dependency-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-dependencies</id>
                        <phase>package</phase>
                        <goals>
                        <goal>copy-dependencies</goal>
                        </goals>
                        <configuration>
                            <includeGroupIds>cglib,com.google.guava,org.apache.directory.studio,commons-lang,
                                org.hamcrest,org.javassist,com.toedter,org.jfree,com.googlecode.json-simple,
                                junit,org.mockito,commons-io
                            </includeGroupIds>
                            <outputDirectory>${project.build.directory}/dependency-jars/</outputDirectory>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
            
            <!-- Run Checkstyle in the verify phase. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-checkstyle-plugin</artifactId>
                <version>${maven-checkstyle-plugin.version}</version>
                <inherited>true</inherited>
                <executions>
                    <execution>
                        <phase>verify</phase>
                        <goals>
                            <goal>checkstyle</goal>
                        </goals>
                    </execution>
                </executions>
                <configuration>
                    <configLocation>checkstyle.xml</configLocation>
                    <suppressionsLocation>checkstyle-suppressions.xml</suppressionsLocation>
                    <!--
                        Workaround for resolving the suppressions file in a maven build: always check two
                        module levels above the current project. IDE builds should provide the config_loc
                        property, hence this setting will not influence the builds triggered in IDEs.
                    -->
                    <!--<propertyExpansion>config_loc=${project.parent.parent.basedir}/</propertyExpansion>-->
                    <failsOnError>true</failsOnError>
                </configuration>
            </plugin>

            <!-- Use maven-resources-plugin version 2.6 (> 2.5) to remove "[debug] execute contextualize" message. -->
            <!--  Referred to http://maven.apache.org/plugins/maven-resources-plugin/examples/copy-resources.html -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-resources-plugin</artifactId>
                <version>${maven-resources-plugin.version}</version>
                <executions>
                    <execution>
                        <id>copy-resources</id>
                        <phase>package</phase>
                        <goals>
                            <goal>copy-resources</goal>
                        </goals>
                        <configuration>
                            <outputDirectory>${basedir}/target</outputDirectory>
                            <resources>
                            <!-- TODO Copy images to images directory -->>
                                <resource>
                                    <directory>${basedir}/images</directory>
                                </resource>
                                <resource>
                                    <directory>${basedir}</directory>
                                    <includes>
                                        <include>appProperties</include>
                                        <include>MetricsListing.txt</include>
                                    </includes>
                                </resource>
                            </resources>              
                        </configuration>            
                    </execution>
                </executions>
            </plugin>

        </plugins>
    </build>

    <url>https://github.com/CTMM-TraIT/trait_proteomics_qc_tool/tree/master/ProteomicsQCReportViewer</url>

    <dependencies>

        <dependency>
            <groupId>cglib</groupId>
            <artifactId>cglib-nodep</artifactId>
            <version>${cglib.version}</version>
        </dependency>

        <dependency>
            <groupId>com.google.guava</groupId>
            <artifactId>guava</artifactId>
            <version>${guava.version}</version>
        </dependency>

        <dependency>
            <groupId>org.apache.directory.studio</groupId>
            <artifactId>org.apache.commons.io</artifactId>
            <version>${commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-io</groupId>
            <artifactId>commons-io</artifactId>
            <version>${apache-commons-io.version}</version>
        </dependency>

        <dependency>
            <groupId>commons-lang</groupId>
            <artifactId>commons-lang</artifactId>
            <version>${commons-lang.version}</version>
        </dependency>

        <dependency>
            <groupId>org.hamcrest</groupId>
            <artifactId>hamcrest-all</artifactId>
            <version>${hamcrest.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.javassist</groupId>
            <artifactId>javassist</artifactId>
            <version>${javassist.version}</version>
        </dependency>

        <!-- TODO: it looks like JCalendar 1.4 is not available from the central Maven repository (search.maven.org).
          -  TODO: can we put it in the NBIC repository (ci.nbiceng.net/nexus)? -->
        <dependency>
            <groupId>com.toedter</groupId>
            <artifactId>jcalendar</artifactId>
            <scope>system</scope>
            <systemPath>${basedir}\lib\jcalendar-1.4.jar</systemPath>
            <version>1.4</version>
        </dependency>

        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jcommon</artifactId>
            <version>${jcommon.version}</version>
        </dependency>

        <dependency>
            <groupId>org.jfree</groupId>
            <artifactId>jfreechart</artifactId>
            <version>${jfreechart.version}</version>
        </dependency>

        <dependency>
            <groupId>com.googlecode.json-simple</groupId>
            <artifactId>json-simple</artifactId>
            <version>${json-simple.version}</version>
        </dependency>

        <dependency>
            <groupId>junit</groupId>
            <artifactId>junit</artifactId>
            <version>${junit.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.mockito</groupId>
            <artifactId>mockito-all</artifactId>
            <version>${mockito.version}</version>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-module-junit4</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.powermock</groupId>
            <artifactId>powermock-api-mockito</artifactId>
            <version>${powermock.version}</version>
            <scope>test</scope>
        </dependency>

        <dependency>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-resources-plugin</artifactId>
            <version>${maven-resources-plugin.version}</version>
        </dependency>

    </dependencies>

    <dependencyManagement/>

    <reporting>
        <plugins>
            <!-- Added the JXR plugin (Java cross-reference tool) to get rid of the "Unable to locate Source XRef to
              -  link to - DISABLED" warning when running Checkstyle. -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-jxr-plugin</artifactId>
                <version>${maven-jxr-plugin.version}</version>
            </plugin>
        </plugins>
    </reporting>

</project>
